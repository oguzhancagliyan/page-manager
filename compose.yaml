version: "3.9"

services:
  api:
    build:
      context: .
      dockerfile: ./PageManager.API/Dockerfile
    image: pagemanager-api:dev
    container_name: pagemanager-api
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"     # 🔴 Swagger için Development
      ASPNETCORE_URLS: "http://+:8080"
      ConnectionStrings__Default: "Host=db;Port=5432;Database=pagemanager;Username=app;Password=appsecret;Pooling=true"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4317"
      OTEL_SERVICE_NAME: "PagesApi"
    ports:
      - "8080:8080"    # http://localhost:8080/swagger
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_started
      otel-collector:
        condition: service_started
    restart: unless-stopped
    networks: [ pagemanager ]

  db:
    image: postgres:16-alpine
    container_name: pagemanager-db
    environment:
      POSTGRES_DB: pagemanager
      POSTGRES_USER: app
      POSTGRES_PASSWORD: appsecret
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U app -d pagemanager -h localhost" ]
      interval: 5s
      timeout: 3s
      retries: 20
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    networks: [ pagemanager ]
  pgadmin:
    image: dpage/pgadmin4:8.10
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"              # http://localhost:5050
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks: [ pagemanager ]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    restart: unless-stopped
    networks: [ pagemanager ]

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_PUBLICBASEURL=http://localhost:5601
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_started
    restart: unless-stopped
    networks: [ pagemanager ]

  jaeger:
    image: jaegertracing/all-in-one:1.56
    container_name: jaeger
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
    ports:
      - "16686:16686"   # http://localhost:16686
    restart: unless-stopped
    networks: [ pagemanager ]

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.98.0
    container_name: otel-collector
    command: [ "--config=/etc/otel/otel-collector-config.yaml" ]
    volumes:
      - ./deploy/otel/otel-collector-config.yaml:/etc/otel/otel-collector-config.yaml:ro
    ports:
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP (opsiyonel)
    depends_on:
      jaeger:
        condition: service_started
    restart: unless-stopped
    networks: [ pagemanager ]
  es-init:
    image: curlimages/curl:8.10.1
    depends_on:
      elasticsearch:
        condition: service_healthy
    entrypoint: >
      sh -c "
        echo 'waiting for elasticsearch...';
        sleep 10;
        curl -s -X PUT http://elasticsearch:9200/pagesapi-logs -H 'Content-Type: application/json' -d'
        {
          \"mappings\": {
            \"properties\": {
              \"timestamp\": {\"type\": \"date\"},
              \"level\": {\"type\": \"keyword\"},
              \"message\": {\"type\": \"text\"}
            }
          }
        }';
        echo 'created index pagesapi-logs';
      "
    networks: [ pagemanager ]


volumes:
  pgdata:
  esdata:

networks:
  pagemanager:
    driver: bridge
